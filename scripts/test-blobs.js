// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Netlify Blobs
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run test-blobs

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.local
import { config } from 'dotenv';
import { fileURLToPath } from 'url';
import { dirname, resolve } from 'path';

const __dirname = dirname(fileURLToPath(import.meta.url));
config({ path: resolve(__dirname, '../.env.local') });

import { getStore } from '@netlify/blobs';

async function testBlobs() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Netlify Blobs...');
  
  // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const siteID = process.env.VITE_NETLIFY_SITE_ID || process.env.NETLIFY_SITE_ID;
  const token = process.env.VITE_NETLIFY_BLOBS_TOKEN || process.env.NETLIFY_BLOBS_TOKEN;
  
  if (!siteID || !token) {
    console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Netlify Blobs:');
    console.log('   VITE_NETLIFY_SITE_ID:', siteID ? '‚úÖ' : '‚ùå');
    console.log('   VITE_NETLIFY_BLOBS_TOKEN:', token ? '‚úÖ' : '‚ùå');
    console.log('\nüí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.local —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:');
    console.log('   VITE_NETLIFY_SITE_ID=–≤–∞—à-site-id');
    console.log('   VITE_NETLIFY_BLOBS_TOKEN=–≤–∞—à-blobs-token');
    return;
  }
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    const store = getStore({
      name: 'learning-progress',
      siteID: siteID,
      token: token
    });
    console.log('‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ–∑–¥–∞–Ω–æ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏');
    
    // –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏
    console.log('üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å...');
    await store.set('test-key', JSON.stringify({
      message: 'Hello from Netlify Blobs!',
      timestamp: new Date().toISOString()
    }));
    console.log('‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–∞');
    
    // –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è
    console.log('üìñ –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ...');
    const data = await store.get('test-key');
    const parsedData = JSON.parse(data);
    console.log('‚úÖ –ß—Ç–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:', parsedData);
    
    // –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è
    console.log('üóëÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ...');
    await store.delete('test-key');
    console.log('‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ');
    
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! Netlify Blobs –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Blobs:', error);
    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç —Å–≤—è–∑–∞–Ω —Å Netlify: netlify link');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è VITE_NETLIFY_SITE_ID –∏ VITE_NETLIFY_BLOBS_TOKEN');
    console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Blobs –≤–∫–ª—é—á–µ–Ω—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–∞–π—Ç–∞');
    console.log('4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ netlify dev –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  testBlobs();
}

export { testBlobs };
